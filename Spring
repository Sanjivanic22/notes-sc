## Spring 
-=================
Spring is opensource lightweight framework 
Which is used to develop any kind of application
It is like framework of framework because it support vrious framework like struts and hibernate.
Spring framework comprise several modules such as IOC,AOP,springn core,spring mvc

Advantages
==========
Spring framework provides predefined libraries and templates
Spring framework privide loos coupling
Manages the dependancies injection and IOC automatically
Spring framwork very easy to  testing
Spring web framework is well design mvc framework which provide the greate alteranative to another ````framework like struts.

Application
==============
IOC container
Is responsible to instatiate,configure and assemble the objects
The IOC container get information from the xml file and work accordingly

Type
======
Bean factory
Xml beanfactory is implementation class to use the bean factory we need to create the instance of xmlbeanfactory.
The constructor of Xml beanfactory class recieves the resource object so we need to pass the resource object to create the object of beanfactory.

ClassPathXmlapplication context class is the implementation class of application context
The constructor of ClassPathXmlapplication class receives string so we can pass the name of xml file to create the interface of applicationcontext.

Dependancy lookup
==================
Is approach where we get the resource after demand
It is tightlly coupled and not easy for testing to solve the problem we should go for dependancy injection.

Dependancy injection
======================
Depenancy injection is design pattern thet removes the dependancies  from the programming code so that it can be easy to test and manage the application.
Dependancy injection makes our code loosely coupled.

Constructor injection
=======================
Here Our Ioc container uses parameterised constructor to create the target bean class object.
In that process we inject the dependant class object to target class object.

The <constructor-args> tag is used for constructor injection.
Here we inject the 
Primitive and string based value
Dependant object
Collection values
If all properties of spring bean class are mandatory to participate in the injection then we 
Should go for constructor injection.

Settter injection
===========================
Here IOC container calls the setter of target class to assign dependant class object to target class object.
<property>tag used for setter injection
We can inject the 
Primitive an string -based values
Dependant object
Collection values

If we want to involve only our choice of propetries into the spring class the we should go for setter injection.


Spring bean scope
===================
When we defining bean we have the option  of declaring a scope for that bean.

Singletone
===========
If scope is set to singletone scope ,the spring IOC container creates exactly one instance of the object defined by that bean defination.
It is default scope if no scope is specified
IOC container creates only one oject for spring bean class nad reuses that object.

Prototype
=============
If scope is set to prototype ,the spring IOC container creates a new instance of the object.
 every time a resquest for that specific bean is mode as rule 
use the prototype scope for all state-full beans and singletom scope for stateless beans.
To define prototype ,you can set the  scope property to prototype in the bean configuration file.

Scope=Request (for http protocol)
================================
IOC container keep spring bean class object as request attribute of we app env.

Scope="session"
Ioc container keeps spring bean class object as session attribute of web app env.

Global session

Autowring
=============
Autowiring enable you to inject the object depndancy .it internally uses setter or constructor injection.
Autowiring work with object dependancy.

In object dependancy we need to call referance of another class from dependancy class manualy
But if we use the wiring concept then we need not to call the refernace maually from the dependant class.
Modes of autowiring
No
Default autowiring mode,its mean no autowiring by default.

Byname
--------
Inject the onject dependancy.according to proptery name and bean name.
In this case proptery name bean name must be same internally call setter method .

Bytype
---------
Inject the object dependancy according to type property name and bean name can be different.
Internally call setter method.

Constructor
------------
Inject by calling constructor of class calls constructor having the large no of parameter.
Autodected-deprecated.

Spring ORM
============
It is spring module providing abstraction on multiple ORM framework like hiberanate like 
O-r mapping 
The process of Linking Db tables with java classes and Db table cols with the properties of classes and having  Synchronization b/w them is called o-r mapping.

Spring ORM
It is a spring module providing abstraction on multiple ORM frameworks like hiberante,iBatis and etc to simplify Object based O-R mapping persistance logic.

It supplies mutiple templates classes like hibernate template 


Spring MVC
=============
## SPRING MVC FLOW
 -------------------------------
 Client Sends a Request:

The client (typically a web browser) sends an HTTP request to the server for a specific URL or endpoint.
DispatcherServlet Receives the Request:

The request is intercepted by the front controller of Spring MVC, known as the DispatcherServlet. It acts as the central entry point for all requests.
Handler Mapping:

The DispatcherServlet consults the configured HandlerMapping to determine which controller (handler) should process the request based on the request URL or other criteria.
The HandlerMapping maps the request to the appropriate controller method based on the configured URL patterns or mappings.
Controller Method Execution:

Once the appropriate controller method is determined, the DispatcherServlet invokes that method to process the request.
The controller method performs the required business logic, data processing, or interacts with other components or services as needed.
The method may also prepare a model object that holds the data to be rendered by the view.
Model and View Resolution:

After the controller method has processed the request, it returns a logical view name and model data.
The DispatcherServlet consults the configured ViewResolver to determine the appropriate View implementation for the returned view name.
The ViewResolver resolves the logical view name to an actual view, which can be a JSP, Thymeleaf template, JSON, XML, etc.
Rendering the View:

The resolved view is responsible for rendering the model data into the final response format.
The view may use the model data to populate dynamic content in the response, apply a template, or generate a specific format like HTML, JSON, XML, etc.
Sending the Response:

The DispatcherServlet sends the final response back to the client, which contains the rendered view or response data.

Spring AOP
==============
AOP is methodology of programming  to solve the problems related OOP style programming,but it is bult on the top of of oops style programming.In AOP code is not clumzy,becoz the primary and secondary logics are saperated
Improves the redability  and modularity of the code.

AOP principle/terminology
--------------------------
A) Aspect(what you want apply)
It is class that represent secondary logic.this is called as middleware service or cross cutting concern

B)Advice(how u want to apply)
The action taken place by aspect is called Advice.for Aspect if specify how it should be excuted/behaved then it is called Advice.

jointPoint(where we can apply)
The possible places in target class where aspect can be adviced.These can be fields,constructor,methods.As of now spring supports only methods as join points.

Pointcut(where we have applied or we want to apply)
Collection of join points where the aspect are adviced i.e pointcut holds set of b.method/target method names belonging target class to apply aspect /advices
Target class
The class that contains b.method/target methods having primary logics nothig but class with joinpoints

 Weaving
The process of applying or mixups secondary logics with primary logics and generating in memory proxy class is called weaving process.Aop enabled softwares will perform this weaving process.

Proxy class
The output /outcome f weaving process done spring Aop enabled framework or software is called proxy class.

Spring container
Spring container is at the core of the spring framework.
The container will creates the object,wire them together,configure them and manage their complete life cycle from creation till destruction.the spring container uses DI to manage the componenets that make up an application.

















